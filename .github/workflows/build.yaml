name: CHIP wheels build

on: push

jobs:
    build_prepare:
        name: Prepare build
        runs-on: ubuntu-latest
        outputs:
            chip_sha: ${{ steps.determine_sha.outputs.chip_sha }}
            version: ${{ steps.version.outputs.version }}
            channel: ${{ steps.version.outputs.channel }}
        steps:
            - name: Checkout build repository
              uses: actions/checkout@v3
            - name: Determine version
              id: determine_sha
              run: |
                  echo "chip_sha=a17c005209fbde737edb97b0f51ea63472c166aa" >> $GITHUB_OUTPUT
            - name: Get version
              id: version
              uses: home-assistant/actions/helpers/version@master

    build_linux_python_lib:
        name: Build Python wheels for Linux
        needs: build_prepare
        timeout-minutes: 60

        runs-on: ubuntu-latest
        permissions:
            contents: write  # for actions/upload-release-asset to upload release asset

        defaults:
            run:
                working-directory: ./project-chip

        container:
            image: connectedhomeip/chip-build:0.5.99
            volumes:
                - "/tmp/log_output:/tmp/test_logs"
            options: --sysctl "net.ipv6.conf.all.disable_ipv6=0
                net.ipv4.conf.all.forwarding=1 net.ipv6.conf.all.forwarding=1"

        steps:
            - name: Dump GitHub context
              env:
                  GITHUB_CONTEXT: ${{ toJSON(github) }}
              run: echo "$GITHUB_CONTEXT"
              working-directory: ./
            - name: Checkout build repository
              uses: actions/checkout@v3
            - uses: Wandalen/wretry.action@v1.0.15
              name: Checkout
              with:
                  action: actions/checkout@v3
                  repository: project-chip/connectedhomeip
                  ref: ${{ needs.build_prepare.outputs.chip_sha }}
                  path: ./project-chip
                  with: |
                      token: ${{ github.token }}
                  attempt_limit: 3
                  attempt_delay: 2000
            - name: Checkout submodules
              run: scripts/checkout_submodules.py --shallow --platform linux
            - name: Bootstrap
              timeout-minutes: 10
              run: scripts/build/gn_bootstrap.sh
            - name: Apply patches
              run: |
                  patch -p1 < ../0001-python-fix-platform-specific-wheel-to-be-spec-compli.patch
                  patch -p1 < ../0001-python-allow-to-customize-wheel-package-name-and-ver.patch
            - name: Setup Build, Run Build and Run Tests
              timeout-minutes: 50
              run: |
                  scripts/build/gn_gen.sh --args=" \
                                                  enable_rtti=true \
                                                  enable_pylib=true \
                                                  chip_config_memory_debug_checks=false \
                                                  chip_config_memory_debug_dmalloc=false \
                                                  chip_mdns=\"minimal\" \
                                                  chip_python_version=\"${{ needs.build_prepare.outputs.version }}\"  \
                                                  chip_python_package_prefix=\"home-assistant-chip\" \
                                                  "
                  scripts/run_in_build_env.sh "ninja -C ./out chip-repl"
            - name: Run Python library specific unit tests
              timeout-minutes: 5
              run: |
                  scripts/run_in_build_env.sh 'pip3 install ./out/controller/python/home_assistant_chip_core-${{ needs.build_prepare.outputs.version }}-cp37-abi3-linux_x86_64.whl'
                  scripts/run_in_build_env.sh 'pip3 install ./out/controller/python/home_assistant_chip_clusters-${{ needs.build_prepare.outputs.version }}-py3-none-any.whl'
                  scripts/run_in_build_env.sh 'pip3 install ./out/controller/python/home_assistant_chip_repl-${{ needs.build_prepare.outputs.version }}-py3-none-any.whl'
                  scripts/run_in_build_env.sh '(cd src/controller/python/test/unit_tests/ && python3 -m unittest -v)'
            - uses: actions/upload-artifact@v3
              with:
                name: chip-wheels
                path: project-chip/out/controller/python/*.whl
